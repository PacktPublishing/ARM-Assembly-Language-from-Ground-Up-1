


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000                 AREA             Swap, CODE, READONLY
    4 00000000                 EXPORT           __main
    5 00000000         
    6 00000000         
    7 00000000         __main
    8 00000000 4819            LDR              R0, =0xE000ED88 ;Read value at 
                                                            the address of the 
                                                            Coprocessor Access 
                                                            Control Register
    9 00000002 6801            LDR              R1,[R0]
   10 00000004 F441 0170       ORR              R1,R1,#(0xF << 20) 
                                                            ;Enable CP10,CP11
   11 00000008 6001            STR              R1,[R0]
   12 0000000A F3BF 8F4F       DSB
   13 0000000E F3BF 8F6F       ISB                          ;Reset the pipeline
                                                            
   14 00000012         
   15 00000012         
   16 00000012         ;
   17 00000012         ; The calculation of the sin(x) will be done in the
   18 00000012         ; subroutine SinCalc. The AAPCS dictates the first
   19 00000012         ; 16 FPU registers (s0-s15) are not preserved, so we wil
                       l
   20 00000012         ; use them in the calling routine to pass the operand an
                       d
   21 00000012         ; return the result. Registers s16-s31 must be preserved
                        in
   22 00000012         ; a subroutine, so they are used in the calling routine.
                       
   23 00000012         ; FPU registers
   24 00000012         ; s0 - Passed operand and returned result
   25 00000012         ; Evaluate the function for operand the test operand
   26 00000012 EEB0 0A00       VLDR.F32         S0, = 2     ; 1.04719
   27 00000016 F000 F801       BL               SinCalc
   28 0000001A         
   29 0000001A E7FE    Stop    B                Stop
   30 0000001C         
   31 0000001C         
   32 0000001C         ; Sine code
   33 0000001C         ; The algorithm is a Taylor series with
   34 0000001C         ; 4 terms (x = x - x^3/3! + x^5/5! - x^7/7!)
   35 0000001C         ; Optimized, we have 9 multiplications and 3 adds.
   36 0000001C         ; We can avoid the divisions by computing 1/3!, 1/5!, et
                       c. and
   37 0000001C         ; using the constant in a multiplication.
   38 0000001C         ;
   39 0000001C         ; This formula works for all x in the range [0, pi/2]
   40 0000001C         ; [0, pi/2]
   41 0000001C         ;
   42 0000001C         ; This routine assumes AAPCS -
   43 0000001C         ; regs s0-s15 parameters and/or scratch
   44 0000001C         ; Register usage:
   45 0000001C         ; s0 - input operand and return result
   46 0000001C         ; s1 - 1/3! (invfact3)
   47 0000001C         ; s2 - 1/5! (invfact5)
   48 0000001C         ; s3 - 1/7! (invfact7)
   49 0000001C         ; s4 - x * s1 (xdiv3), then s4 * s7 (x^2 * xdiv3) (x3div



ARM Macro Assembler    Page 2 


                       3)
   50 0000001C         ; s5 - x * s2 (xdiv5), then s5 * s8 (x^4 * xdiv5) (x5div
                       5)
   51 0000001C         ; s6 - x * s3 (xdiv7), then s6 * s9 (x^6 * xdiv7) (x7div
                       7)
   52 0000001C         ; s7 - x^2
   53 0000001C         ; s8 - x^4
   54 0000001C         ; s9 - x^6
   55 0000001C         ; s10 - scratch
   56 0000001C         
   57 0000001C         SinCalc
   58 0000001C         ; set up the three inverse factorial constants
   59 0000001C EDDF 0A0F       VLDR.F32         s1, invfact3
   60 00000020 ED9F 1A0F       VLDR.F32         s2, invfact5
   61 00000024 EDDF 1A0F       VLDR.F32         s3, invfact7
   62 00000028 EE20 2A20       VMUL.F32         s4, s0, s1  ; compute xdiv3
   63 0000002C EE60 3A00       VMUL.F32         s7, s0, s0  ; compute x^2
   64 00000030 EE60 2A01       VMUL.F32         s5, s0, s2  ; compute xdiv5
   65 00000034 EE22 2A23       VMUL.F32         s4, s4, s7  ; compute x3div3
   66 00000038 EE23 4AA3       VMUL.F32         s8, s7, s7  ; compute x^4
   67 0000003C EE20 3A21       VMUL.F32         s6, s0, s3  ; compute xdiv7
   68 00000040 EE30 5A42       VSUB.F32         s10, s0, s4 ; compute terms12, 
                                                            x-x^3/3!
   69 00000044 EE63 4A84       VMUL.F32         s9, s7, s8  ; compute x^6
   70 00000048 EE62 2A84       VMUL.F32         s5, s5, s8  ; compute x5div5
   71 0000004C EE23 3A24       VMUL.F32         s6, s6, s9  ; compute x7div7
   72 00000050 EE35 5A22       VADD.F32         s10, s10, s5 ; compute terms123
                                                            , x-x^3/3! + x^5/5!
                                                            
   73 00000054 EE35 0A43       VSUB.F32         s0, s10, s6 ; compute result
   74 00000058         
   75 00000058 4770            BX               LR          ; return
   76 0000005A         
   77 0000005A 00 00 3E2AAAAB 
                       invfact3
                               DCD              0x3E2AAAAB  ; 1/3!
   78 00000060 3C088888 
                       invfact5
                               DCD              0x3C088888  ; 1/5!
   79 00000064 39500CD1 
                       invfact7
                               DCD              0x39500CD1  ; 1/7!
   80 00000068                 END
              E000ED88 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_stm32f4 -IC:\Keil_
v5\V518a\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\V518a\ARM\PACK\Kei
l\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include --predefine="_
_MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 525" --predefine="_RTE_ S
ETA 1" --predefine="STM32F411xE SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SinCalc 0000001C

Symbol: SinCalc
   Definitions
      At line 57 in file main.s
   Uses
      At line 27 in file main.s
Comment: SinCalc used once
Stop 0000001A

Symbol: Stop
   Definitions
      At line 29 in file main.s
   Uses
      At line 29 in file main.s
Comment: Stop used once
Swap 00000000

Symbol: Swap
   Definitions
      At line 3 in file main.s
   Uses
      None
Comment: Swap unused
__main 00000000

Symbol: __main
   Definitions
      At line 7 in file main.s
   Uses
      At line 4 in file main.s
Comment: __main used once
invfact3 0000005C

Symbol: invfact3
   Definitions
      At line 77 in file main.s
   Uses
      At line 59 in file main.s
Comment: invfact3 used once
invfact5 00000060

Symbol: invfact5
   Definitions
      At line 78 in file main.s
   Uses
      At line 60 in file main.s
Comment: invfact5 used once
invfact7 00000064

Symbol: invfact7
   Definitions
      At line 79 in file main.s
   Uses
      At line 61 in file main.s
Comment: invfact7 used once
7 symbols
344 symbols in table
