; Registers used:
; r0 = return value in Q31 notation
; r1 = sin argument (in degrees, from 0 to 360)
; r2 = temp
; r4 = starting address of sine table
; r7 = copy of argument
	
		AREA	SineTable, CODE, READONLY
		EXPORT  __main


__main

        MOV		 R1,#40
		MOV		 R7,R1 ; make a copy of the argument
		LDR		 R2, = 270 ; constant won’t fit into rotation scheme
		ADR 	 R4, sin_data ; load address of sin table
		CMP 	 R1, #90 ; determine quadrant
		BLE 	 retvalue ; first quadrant?
		CMP 	 R1, #180
		ITT 	 LE
		RSBLE 	R1,R1,#180 ; second quadrant?
		BLE 	retvalue
		CMP 	R1, R2
		ITT 	LE
		SUBLE 	R1, R1, #180 ; third quadrant?
		BLE 	retvalue
		RSB 	R1, R1, #360 ; otherwise, fourth

retvalue
		; get sin value from table
		LDR R0, [R4, R1, LSL #2]
		CMP R7, #180 ; do we return a neg value?
		IT GT
		RSBGT R0, R0, #0 ; negate the value if so
done 	B done
		ALIGN



sin_data
		DCD 0x00000000,0x023BE164,0x04779630,0x06B2F1D8
		DCD 0x08EDC7B0,0x0B27EB50,0x0D613050,0x0F996A30
		DCD 0x11D06CA0,0x14060B80,0x163A1A80,0x186C6DE0
		DCD 0x1A9CD9C0,0x1CCB3220,0x1EF74C00,0x2120FB80
		DCD 0x234815C0,0x256C6F80,0x278DDE80,0x29AC3780
		DCD 0x2BC750C0,0x2DDF0040,0x2FF31BC0,0x32037A40
		DCD 0x340FF240,0x36185B00,0x381C8BC0,0x3A1C5C80
		DCD 0x3C17A500,0x3E0E3DC0,0x40000000,0x41ECC480
		DCD 0x43D46500,0x45B6BB80,0x4793A200,0x496AF400
		DCD 0x4B3C8C00,0x4D084600,0x4ECDFF00,0x508D9200
		DCD 0x5246DD00,0x53F9BE00,0x55A61280,0x574BB900
		DCD 0x58EA9100,0x5A827980,0x5C135380,0x5D9CFF80
		DCD 0x5F1F5F00,0x609A5280,0x620DBE80,0x63798500
		DCD 0x64DD8900,0x6639B080,0x678DDE80,0x68D9F980
		DCD 0x6A1DE700,0x6B598F00,0x6C8CD700,0x6DB7A880
		DCD 0x6ED9EC00,0x6FF38A00,0x71046D00,0x720C8080
		DCD 0x730BAF00,0x7401E500,0x74EF0F00,0x75D31A80
		DCD 0x76ADF600,0x777F9000,0x7847D900,0x7906C080
		DCD 0x79BC3880,0x7A683200,0x7B0A9F80,0x7BA37500
		DCD 0x7C32A680,0x7CB82880,0x7D33F100,0x7DA5F580
		DCD 0x7E0E2E00,0x7E6C9280,0x7EC11A80,0x7F0BC080
		DCD 0x7F4C7E80,0x7F834F00,0x7FB02E00,0x7FD31780
		DCD 0x7FEC0A00,0x7FFB0280,0x7FFFFFFF
		END