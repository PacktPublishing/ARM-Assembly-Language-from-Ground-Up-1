


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000 0000000E 
                       NUM     EQU              14          ; insert # of entri
                                                            es here
    3 00000000 00000003 
                       ESIZE   EQU              3           ; log 2 of the entr
                                                            y size (16 bytes)
    4 00000000         ; NB: This assumes entry size is a power of 2
    5 00000000                 AREA             BINARY, CODE
    6 00000000                 ENTRY
    7 00000000                 EXPORT           __main
    8 00000000         
    9 00000000         ; Registers used:
   10 00000000         ; R0 - first
   11 00000000         ; R1 - last
   12 00000000         ; R2 - middle
   13 00000000         ; R3 - index
   14 00000000         ; R4 - size of the entries (log 2)
   15 00000000         ; R5 - the key (what you're searching for)
   16 00000000         ; R6 - address of the list
   17 00000000         ; R7 - temp
   18 00000000         __main
   19 00000000         
   20 00000000 F04F 0505       LDR              R5, =0x005  ; let’s look for OL
                                                            IVES
   21 00000004 F20F 0630 
              F106 0600        ADRL             R6, table_start ; load address 
                                                            of the table
   22 0000000C F04F 0000       MOV              R0, #0      ; first = 0
   23 00000010 F04F 010D       MOV              R1, #NUM-1  ; last = number of 
                                                            entries in the list
                                                             - 1
   24 00000014         loop
   25 00000014 4288            CMP              R0, R1      ; compare first and
                                                             last
   26 00000016 BFC8 2200       MOVGT            R2, #0      ; first > last, no 
                                                            key found, middle =
                                                             0
   27 0000001A DC0B            BGT              done
   28 0000001C EB00 0201       ADD              R2, R0, R1  ; first + last
   29 00000020 EA4F 0262       MOV              R2, R2, ASR #1 
                                                            ; first + last /2
   30 00000024 F856 7032       LDR              R7, [R6, R2, LSL #ESIZE] 
                                                            ; load the entry
   31 00000028 42BD            CMP              R5, R7      ; compare key to va
                                                            lue loaded
   32 0000002A BFC8 1C50       ADDGT            R0, R2, #1  ; first = middle + 
                                                            1
   33 0000002E BFB8 1E51       SUBLT            R1, R2, #1  ; last = middle - 1
                                                            
   34 00000032         
   35 00000032 D1EF            BNE              loop        ; go again
   36 00000034         done
   37 00000034 4613            MOV              R3, R2      ; move middle to 'i
                                                            ndex'
   38 00000036         stop
   39 00000036 E7FE            B                stop
   40 00000038         
   41 00000038         



ARM Macro Assembler    Page 2 


   42 00000038         table_start
   43 00000038 00000004        DCD              0x004
   44 0000003C 50 45 50 
              50 45 52 
              4F 4E 49 
              20               DCB              "PEPPERONI "
   45 00000046 00 00 00000005  DCD              0x005
   46 0000004C 41 4E 43 
              48 4F 56 
              49 45 53 
              20               DCB              "ANCHOVIES "
   47 00000056 00 00 00000010  DCD              0x010
   48 0000005C 4F 4C 49 
              56 45 53 
              20               DCB              "OLIVES "
   49 00000063 00 00000012     DCD              0x012
   50 00000068 47 52 45 
              45 4E 20 
              50 45 50 
              50 45 52         DCB              "GREEN PEPPER"
   51 00000074 00000018        DCD              0x018
   52 00000078 42 4C 41 
              43 4B 20 
              4F 4C 49 
              56 45 53         DCB              "BLACK OLIVES"
   53 00000084 00000022        DCD              0x022
   54 00000088 43 48 45 
              45 53 45 
              20               DCB              "CHEESE "
   55 0000008F 00 00000024     DCD              0x024
   56 00000094 45 58 54 
              52 41 20 
              53 41 55 
              43 45 20         DCB              "EXTRA SAUCE "
   57 000000A0 00000026        DCD              0x026
   58 000000A4 43 48 49 
              43 4B 45 
              4E 20            DCB              "CHICKEN "
   59 000000AC 00000030        DCD              0x030
   60 000000B0 43 41 4E 
              41 44 49 
              41 4E 20 
              42 41 43         DCB              "CANADIAN BAC"
   61 000000BC 00000035        DCD              0x035
   62 000000C0 47 52 45 
              45 4E 20 
              4F 4C 49 
              56 45 53         DCB              "GREEN OLIVES"
   63 000000CC 00000038        DCD              0x038
   64 000000D0 4D 55 53 
              48 52 4F 
              4F 4D 53 
              20               DCB              "MUSHROOMS "
   65 000000DA 00 00 00000100  DCD              0x100
   66 000000E0 54 4F 4D 
              41 54 4F 
              45 53 20         DCB              "TOMATOES "
   67 000000E9 00 00 00 
              00000200         DCD              0x200



ARM Macro Assembler    Page 3 


   68 000000F0 50 49 4E 
              45 41 50 
              50 4C 45 
              20               DCB              "PINEAPPLE "
   69 000000FA 00 00 00000300  DCD              0x300
   70 00000100 50 49 4E 
              45 20 4E 
              55 54 53 
              20               DCB              "PINE NUTS "
   71 0000010A 00 00           ALIGN
   72 0000010C         
   73 0000010C                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_stm32f4 -IC:\Keil_
v5\V518a\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\V518a\ARM\PACK\Kei
l\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include --predefine="_
_MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 525" --predefine="_RTE_ S
ETA 1" --predefine="STM32F411xE SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BINARY 00000000

Symbol: BINARY
   Definitions
      At line 5 in file main.s
   Uses
      None
Comment: BINARY unused
__main 00000000

Symbol: __main
   Definitions
      At line 18 in file main.s
   Uses
      At line 7 in file main.s
Comment: __main used once
done 00000034

Symbol: done
   Definitions
      At line 36 in file main.s
   Uses
      At line 27 in file main.s
Comment: done used once
loop 00000014

Symbol: loop
   Definitions
      At line 24 in file main.s
   Uses
      At line 35 in file main.s
Comment: loop used once
stop 00000036

Symbol: stop
   Definitions
      At line 38 in file main.s
   Uses
      At line 39 in file main.s
Comment: stop used once
table_start 00000038

Symbol: table_start
   Definitions
      At line 42 in file main.s
   Uses
      At line 21 in file main.s
Comment: table_start used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ESIZE 00000003

Symbol: ESIZE
   Definitions
      At line 3 in file main.s
   Uses
      At line 30 in file main.s
Comment: ESIZE used once
NUM 0000000E

Symbol: NUM
   Definitions
      At line 2 in file main.s
   Uses
      At line 23 in file main.s
Comment: NUM used once
2 symbols
343 symbols in table
